  Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.DesignResources.resources - Embedded, ContainedInManifestFile, 
  Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.Manageability.Properties.Resources.resources - Embedded, ContainedInManifestFile, 
  Microsoft.Practices.EnterpriseLibrary.Caching.Properties.Resources.resources - Embedded, ContainedInManifestFile, 
Assembly Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly Microsoft.Practices.EnterpriseLibrary.Common, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35: 
	hash=SHA1, flags=None
Assembly System.Configuration.Install, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=SHA1, flags=None
Assembly System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly Microsoft.Practices.ServiceLocation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35: 
	hash=SHA1, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=SHA1, flags=None
Interface Microsoft.Practices.EnterpriseLibrary.Caching.ICacheScavenger: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    StartScavenging(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Caching.BackgroundScheduler: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Caching.ExpirationTask, Microsoft.Practices.EnterpriseLibrary.Caching.ScavengerTask, Microsoft.Practices.EnterpriseLibrary.Caching.Instrumentation.ICachingInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Caching.ICacheScavenger
  Methods:
    ExpirationTimeoutExpired(Object): PrivateScope, Public, HideBySig
    StartScavenging(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Microsoft.Practices.EnterpriseLibrary.Caching.IBackingStore: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Add(CacheItem): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Remove(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UpdateLastAccessedTime(String, DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Flush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Load(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.BaseBackingStore: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Caching.IBackingStore
    System.IDisposable
  Properties:
    Int32 Count 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Remove(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    UpdateLastAccessedTime(String, DateTime): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Flush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Add(CacheItem): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Load(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.IsolatedStorageBackingStore: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.BaseBackingStore
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.IStorageEncryptionProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
  Properties:
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.IsolatedStorageCacheItem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.IsolatedStorage.IsolatedStorageFile, System.String, Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.IStorageEncryptionProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Store(CacheItem): PrivateScope, Public, HideBySig
    Load(): PrivateScope, Public, HideBySig
    UpdateLastAccessedTime(DateTime): PrivateScope, Public, HideBySig
Interface Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.IStorageEncryptionProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Encrypt(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Decrypt(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Caching.IBackingStore
    System.IDisposable
  Properties:
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(CacheItem): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    UpdateLastAccessedTime(String, DateTime): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Flush(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Load(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Microsoft.Practices.EnterpriseLibrary.Caching.ICacheOperations: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.Collections.Hashtable CurrentCacheState 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_CurrentCacheState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    RemoveItemFromCache(String, CacheItemRemovedReason): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Microsoft.Practices.EnterpriseLibrary.Caching.Cache: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Caching.IBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching.Instrumentation.ICachingInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Caching.ICacheOperations
    System.IDisposable
  Properties:
    Int32 Count 'get ' : 
    System.Collections.Hashtable CurrentCacheState 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentCacheState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Contains(String): PrivateScope, Public, HideBySig
    Add(String, Object): PrivateScope, Public, HideBySig
    Add(String, Object, CacheItemPriority, ICacheItemRefreshAction, ICacheItemExpiration[]): PrivateScope, Public, HideBySig
    Remove(String): PrivateScope, Public, HideBySig
    Remove(String, CacheItemRemovedReason): PrivateScope, Public, HideBySig
    RemoveItemFromCache(String, CacheItemRemovedReason): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetData(String): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Caching.CacheCapacityScavengingPolicy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 MaximumItemsAllowedBeforeScavenging 'get ' : 
  Methods:
    get_MaximumItemsAllowedBeforeScavenging(): PrivateScope, Public, HideBySig, SpecialName
    IsScavengingNeeded(Int32): PrivateScope, Public, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Caching.CacheFactory: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetCacheManager(): PrivateScope, Public, Static, HideBySig
    GetCacheManager(String): PrivateScope, Public, Static, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Caching.CacheItem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.Object, Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemPriority, Microsoft.Practices.EnterpriseLibrary.Caching.ICacheItemRefreshAction, Microsoft.Practices.EnterpriseLibrary.Caching.ICacheItemExpiration[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTime, System.String, System.Object, Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemPriority, Microsoft.Practices.EnterpriseLibrary.Caching.ICacheItemRefreshAction, Microsoft.Practices.EnterpriseLibrary.Caching.ICacheItemExpiration[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemPriority ScavengingPriority 'get ' : 
    System.DateTime LastAccessedTime 'get ' : 
    Boolean WillBeExpired 'get set' : 
    Boolean EligibleForScavenging 'get ' : 
    System.Object Value 'get ' : 
    System.String Key 'get ' : 
    Microsoft.Practices.EnterpriseLibrary.Caching.ICacheItemRefreshAction RefreshAction 'get ' : 
  Methods:
    get_ScavengingPriority(): PrivateScope, Public, HideBySig, SpecialName
    get_LastAccessedTime(): PrivateScope, Public, HideBySig, SpecialName
    get_WillBeExpired(): PrivateScope, Public, HideBySig, SpecialName
    set_WillBeExpired(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_EligibleForScavenging(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    get_RefreshAction(): PrivateScope, Public, HideBySig, SpecialName
    GetExpirations(): PrivateScope, Public, HideBySig
    HasExpired(): PrivateScope, Public, HideBySig
    TouchedByUserAction(Boolean): PrivateScope, Public, HideBySig
    MakeEligibleForScavenging(): PrivateScope, Public, HideBySig
    MakeNotEligibleForScavenging(): PrivateScope, Public, HideBySig
    SetLastAccessedTime(DateTime): PrivateScope, Public, HideBySig
Struct Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemPriority: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemPriority None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemPriority Low = 1 : Public, Static, Literal, HasDefault
    Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemPriority Normal = 2 : Public, Static, Literal, HasDefault
    Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemPriority High = 3 : Public, Static, Literal, HasDefault
    Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemPriority NotRemovable = 4 : Public, Static, Literal, HasDefault
Struct Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemRemovedReason: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemRemovedReason Expired = 0 : Public, Static, Literal, HasDefault
    Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemRemovedReason Removed = 1 : Public, Static, Literal, HasDefault
    Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemRemovedReason Scavenged = 2 : Public, Static, Literal, HasDefault
    Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemRemovedReason Unknown = 9999 : Public, Static, Literal, HasDefault
Interface Microsoft.Practices.EnterpriseLibrary.Caching.ICacheManager: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Int32 Count 'get ' : 
    System.Object Item [System.String] 'get ' : 
  Methods:
    Add(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Add(String, Object, CacheItemPriority, ICacheItemRefreshAction, ICacheItemExpiration[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Contains(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetData(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Remove(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Item(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Caching.Cache, Microsoft.Practices.EnterpriseLibrary.Caching.BackgroundScheduler, Microsoft.Practices.EnterpriseLibrary.Caching.ExpirationPollTimer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
    Microsoft.Practices.EnterpriseLibrary.Caching.ICacheManager
  Properties:
    Int32 Count 'get ' : 
    System.Object Item [System.String] 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Contains(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(String, Object, CacheItemPriority, ICacheItemRefreshAction, ICacheItemExpiration[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetData(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Flush(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Caching.CacheManagerFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.ContainerBasedInstanceFactory`1[Microsoft.Practices.EnterpriseLibrary.Caching.ICacheManager]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerDataBase: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NameTypeConfigurationElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetRegistrations(IConfigurationSource): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerDataBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, Int32, Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ExpirationPollFrequencyInSeconds 'get set' : 
    Int32 MaximumElementsInCacheBeforeScavenging 'get set' : 
    Int32 NumberToRemoveWhenScavenging 'get set' : 
    System.String CacheStorage 'get set' : 
  Methods:
    get_ExpirationPollFrequencyInSeconds(): PrivateScope, Public, HideBySig, SpecialName
    set_ExpirationPollFrequencyInSeconds(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumElementsInCacheBeforeScavenging(): PrivateScope, Public, HideBySig, SpecialName
    set_MaximumElementsInCacheBeforeScavenging(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NumberToRemoveWhenScavenging(): PrivateScope, Public, HideBySig, SpecialName
    set_NumberToRemoveWhenScavenging(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CacheStorage(): PrivateScope, Public, HideBySig, SpecialName
    set_CacheStorage(String): PrivateScope, Public, HideBySig, SpecialName
    GetRegistrations(IConfigurationSource): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.SerializableConfigurationSection
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.ITypeRegistrationsProvider
  Fields:
    System.String SectionName = cachingConfiguration : Public, Static, Literal, HasDefault
  Properties:
    System.String DefaultCacheManager 'get set' : 
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NameTypeConfigurationElementCollection`2[Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerDataBase,Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CustomCacheManagerData] CacheManagers 'get ' : 
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NameTypeConfigurationElementCollection`2[Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheStorageData,Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CustomCacheStorageData] BackingStores 'get ' : 
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NameTypeConfigurationElementCollection`2[Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.StorageEncryptionProviderData,Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.StorageEncryptionProviderData] EncryptionProviders 'get ' : 
  Methods:
    get_DefaultCacheManager(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultCacheManager(String): PrivateScope, Public, HideBySig, SpecialName
    get_CacheManagers(): PrivateScope, Public, HideBySig, SpecialName
    get_BackingStores(): PrivateScope, Public, HideBySig, SpecialName
    get_EncryptionProviders(): PrivateScope, Public, HideBySig, SpecialName
    GetRegistrations(IConfigurationSource): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetUpdatedRegistrations(IConfigurationSource): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheStorageData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NameTypeConfigurationElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String StorageEncryption 'get set' : 
  Methods:
    get_StorageEncryption(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_StorageEncryption(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetRegistrations(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CustomCacheStorageData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheStorageData
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IHelperAssistedCustomConfigurationData`1[Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CustomCacheStorageData]
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ICustomProviderData
  Properties:
    System.String TypeName 'get set' : 
    System.Collections.Specialized.NameValueCollection Attributes 'get ' : 
  Methods:
    get_TypeName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_TypeName(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    SetAttributeValue(String, String): PrivateScope, Public, HideBySig
    get_Attributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetRegistrations(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CustomCacheManagerData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerDataBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IHelperAssistedCustomConfigurationData`1[Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CustomCacheManagerData]
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ICustomProviderData
  Properties:
    System.String TypeName 'get set' : 
    System.Collections.Specialized.NameValueCollection Attributes 'get ' : 
  Methods:
    SetAttributeValue(String, String): PrivateScope, Public, HideBySig
    get_TypeName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_TypeName(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetRegistrations(IConfigurationSource): PrivateScope, Public, Virtual, HideBySig
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ICachingConfigurationCacheStorageExtension: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Properties:
    Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheStorageData CacheStorage 'get ' : 
    Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings CachingSettings 'get ' : 
  Methods:
    get_CacheStorage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CachingSettings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.CacheManagerExtension: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ICachingConfigurationCacheStorageExtension
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ICachingConfigurationCacheManagerExtension: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Properties:
    Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerData CacheManager 'get ' : 
    Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings CachingSettings 'get ' : 
  Methods:
    get_CacheManager(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CachingSettings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ICachingConfiguration: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ICachingConfigurationExtension: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings CachingSettings 'get ' : 
  Methods:
    get_CachingSettings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.CacheManagerSettingsExtension: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ICachingConfiguration): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ICachingConfiguration
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ICachingConfigurationExtension
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.CachingConfigurationSourceBuilderExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ConfigureCaching(IConfigurationSourceBuilder): PrivateScope, Public, Static, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.CacheStorageExtension: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ICachingConfigurationCacheStorageExtension
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IBackingStoreEncryptItemsUsing: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    SharedEncryptionProviderNamed(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ICachingConfigurationCacheManager: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Properties:
    Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.Fluent.ICachingConfigurationCacheManagerOptions WithOptions 'get ' : 
  Methods:
    UseAsDefaultCache(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_WithOptions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    StoreInSharedBackingStore(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StoreInMemory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.Fluent.ICachingConfigurationCacheManagerOptions: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ICachingConfigurationCacheManager
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    PollWhetherItemsAreExpiredIntervalSeconds(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StartScavengingAfterItemCount(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WhenScavengingRemoveItemCount(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ICachingConfigurationCustomCacheManager: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ICachingConfiguration
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    UseAsDefaultCache(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IStoreInCustomStore: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ICachingConfiguration
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Properties:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IBackingStoreEncryptItemsUsing EncryptUsing 'get ' : 
  Methods:
    get_EncryptUsing(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IStoreInIsolatedStorage: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ICachingConfiguration
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Properties:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IBackingStoreEncryptItemsUsing EncryptUsing 'get ' : 
  Methods:
    UsePartition(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_EncryptUsing(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.StoreInCustomStoreExtension: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    StoreInCustomStore(ICachingConfigurationCacheManager, String): PrivateScope, Public, Static, HideBySig
    StoreInCustomStore(ICachingConfigurationCacheManager, String, Type): PrivateScope, Public, Static, HideBySig
    StoreInCustomStore(ICachingConfigurationCacheManager, String, NameValueCollection): PrivateScope, Public, Static, HideBySig
    StoreInCustomStore(ICachingConfigurationCacheManager, String, Type, NameValueCollection): PrivateScope, Public, Static, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.StoreInIsolatedStorageExtension: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    StoreInIsolatedStorage(ICachingConfigurationCacheManager, String): PrivateScope, Public, Static, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ForCacheManagerNamedExtension: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ForCacheManagerNamed(ICachingConfiguration, String): PrivateScope, Public, Static, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ForCustomCacheManagerNamedExtension: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ForCustomCacheManagerNamed(ICachingConfiguration, String): PrivateScope, Public, Static, HideBySig
    ForCustomCacheManagerNamed(ICachingConfiguration, String, Type): PrivateScope, Public, Static, HideBySig
    ForCustomCacheManagerNamed(ICachingConfiguration, String, NameValueCollection): PrivateScope, Public, Static, HideBySig
    ForCustomCacheManagerNamed(ICachingConfiguration, String, Type, NameValueCollection): PrivateScope, Public, Static, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.IsolatedStorageCacheStorageData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheStorageData
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String PartitionName 'get set' : 
  Methods:
    get_PartitionName(): PrivateScope, Public, HideBySig, SpecialName
    set_PartitionName(String): PrivateScope, Public, HideBySig, SpecialName
    GetRegistrations(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.Manageability.CacheManagerSettingsManageabilityProvider: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProviderBase`1[Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings]
    Void .ctor(System.Collections.Generic.IDictionary`2[System.Type,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProvider]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String BackingStoresKeyName = backingStores : Public, Static, Literal, HasDefault
    System.String CacheManagerExpirationPollFrequencyInSecondsPropertyName = expirationPollFrequencyInSeconds : Public, Static, Literal, HasDefault
    System.String CacheManagerMaximumElementsInCacheBeforeScavengingPropertyName = maximumElementsInCacheBeforeScavenging : Public, Static, Literal, HasDefault
    System.String CacheManagerNumberToRemoveWhenScavengingPropertyName = numberToRemoveWhenScavenging : Public, Static, Literal, HasDefault
    System.String CacheManagersKeyName = cacheManagers : Public, Static, Literal, HasDefault
    System.String DefaultCacheManagerPropertyName = defaultCacheManager : Public, Static, Literal, HasDefault
    System.String EncryptionProvidersKeyName = encryptionProviders : Public, Static, Literal, HasDefault
Class Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.Manageability.CacheStorageDataManageabilityProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1[Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheStorageData]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.Manageability.CustomCacheManagerDataManageabilityProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.CustomProviderDataManageabilityProvider`1[Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CustomCacheManagerData]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.Manageability.CustomCacheStorageDataManageabilityProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.CustomProviderDataManageabilityProvider`1[Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CustomCacheStorageData]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String AttributesPropertyName = attributes : Public, Static, Literal, HasDefault
    System.String ProviderTypePropertyName = type : Public, Static, Literal, HasDefault
Class Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.Manageability.IsolatedStorageCacheStorageDataManageabilityProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1[Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.IsolatedStorageCacheStorageData]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String PartitionNamePropertyName = partitionName : Public, Static, Literal, HasDefault
Class Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.StorageEncryptionProviderData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NameTypeConfigurationElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetRegistrations(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.Unity.CachingBlockExtension: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Unity.EnterpriseLibraryBlockExtension
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Practices.EnterpriseLibrary.Caching.ExpirationPollTimer: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    StartPolling(TimerCallback): PrivateScope, Public, HideBySig
    StopPolling(): PrivateScope, Public, HideBySig
Interface Microsoft.Practices.EnterpriseLibrary.Caching.ICacheItemExpiration: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    HasExpired(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Notify(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Initialize(CacheItem): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Caching.Expirations.AbsoluteTime: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.TimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Caching.ICacheItemExpiration
  Properties:
    System.DateTime AbsoluteExpirationTime 'get ' : 
  Methods:
    get_AbsoluteExpirationTime(): PrivateScope, Public, HideBySig, SpecialName
    HasExpired(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Notify(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Initialize(CacheItem): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Caching.Expirations.ExtendedFormat: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Format 'get ' : 
    Boolean ExpireEveryMinute 'get ' : 
    Boolean ExpireEveryDay 'get ' : 
    Boolean ExpireEveryHour 'get ' : 
    Boolean ExpireEveryMonth 'get ' : 
    Boolean ExpireEveryDayOfWeek 'get ' : 
  Methods:
    Validate(String): PrivateScope, Public, Static, HideBySig
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    GetMinutes(): PrivateScope, Public, HideBySig
    GetHours(): PrivateScope, Public, HideBySig
    GetDays(): PrivateScope, Public, HideBySig
    GetMonths(): PrivateScope, Public, HideBySig
    GetDaysOfWeek(): PrivateScope, Public, HideBySig
    get_ExpireEveryMinute(): PrivateScope, Public, HideBySig, SpecialName
    get_ExpireEveryDay(): PrivateScope, Public, HideBySig, SpecialName
    get_ExpireEveryHour(): PrivateScope, Public, HideBySig, SpecialName
    get_ExpireEveryMonth(): PrivateScope, Public, HideBySig, SpecialName
    get_ExpireEveryDayOfWeek(): PrivateScope, Public, HideBySig, SpecialName
    IsExpired(DateTime, DateTime): PrivateScope, Public, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Caching.Expirations.ExtendedFormatTime: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Caching.ICacheItemExpiration
  Properties:
    System.String TimeFormat 'get ' : 
  Methods:
    get_TimeFormat(): PrivateScope, Public, HideBySig, SpecialName
    HasExpired(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Notify(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Initialize(CacheItem): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Caching.Expirations.FileDependency: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Caching.ICacheItemExpiration
  Properties:
    System.String FileName 'get ' : 
    System.DateTime LastModifiedTime 'get ' : 
  Methods:
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    get_LastModifiedTime(): PrivateScope, Public, HideBySig, SpecialName
    HasExpired(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Notify(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Initialize(CacheItem): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Caching.Expirations.NeverExpired: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Caching.ICacheItemExpiration
  Methods:
    HasExpired(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Notify(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Initialize(CacheItem): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Caching.Expirations.SlidingTime: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(System.TimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.TimeSpan, System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Caching.ICacheItemExpiration
  Properties:
    System.TimeSpan ItemSlidingExpiration 'get ' : 
    System.DateTime TimeLastUsed 'get ' : 
  Methods:
    get_ItemSlidingExpiration(): PrivateScope, Public, HideBySig, SpecialName
    get_TimeLastUsed(): PrivateScope, Public, HideBySig, SpecialName
    HasExpired(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Notify(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Initialize(CacheItem): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Caching.ExpirationTask: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Caching.ICacheOperations, Microsoft.Practices.EnterpriseLibrary.Caching.Instrumentation.ICachingInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    DoExpirations(): PrivateScope, Public, HideBySig
    MarkAsExpired(Hashtable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SweepExpiredItemsFromCache(Hashtable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PrepareForSweep(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Microsoft.Practices.EnterpriseLibrary.Caching.ICacheItemRefreshAction: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Refresh(String, Object, CacheItemRemovedReason): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Caching.Instrumentation.CachingInstrumentationInstaller: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Configuration.Install.Installer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Practices.EnterpriseLibrary.Caching.Instrumentation.DefaultCachingEventLogger: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.InstrumentationListener
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String EventLogSourceName = Enterprise Library Caching : Public, Static, Literal, HasDefault
  Methods:
    LogConfigurationError(String, Exception): PrivateScope, Public, HideBySig
Interface Microsoft.Practices.EnterpriseLibrary.Caching.Instrumentation.ICachingInstrumentationProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    FireCacheUpdated(Int64, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FireCacheAccessed(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FireCacheExpired(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FireCacheScavenged(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FireCacheCallbackFailed(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FireCacheFailed(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Caching.Instrumentation.CachingInstrumentationProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.InstrumentationListener
    Void .ctor(System.String, Boolean, Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean, Boolean, Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.IPerformanceCounterNameFormatter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Caching.Instrumentation.ICachingInstrumentationProvider
  Fields:
    System.String CounterCategoryName = Enterprise Library Caching Counters : Public, Static, Literal, HasDefault
    System.String EventLogSourceName = Enterprise Library Caching : Public, Static, Literal, HasDefault
    System.String TotalCacheExpiriesCounterName = Total Cache Expiries : Public, Static, Literal, HasDefault
    System.String TotalCacheHitsCounterName = Total Cache Hits : Public, Static, Literal, HasDefault
    System.String TotalCacheMissesCounterName = Total Cache Misses : Public, Static, Literal, HasDefault
    System.String TotalCacheScavengedItemsCounterName = Total Cache Scavenged Items : Public, Static, Literal, HasDefault
    System.String TotalUpdatedEntriesItemsCounterName = Total Updated Entries : Public, Static, Literal, HasDefault
  Methods:
    FireCacheUpdated(Int64, Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireCacheAccessed(String, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireCacheExpired(Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireCacheScavenged(Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireCacheCallbackFailed(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireCacheFailed(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Caching.PriorityDateComparer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.Hashtable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IComparer
  Methods:
    Compare(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Caching.RefreshActionInvoker: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    InvokeRefreshAction(CacheItem, CacheItemRemovedReason, ICachingInstrumentationProvider): PrivateScope, Public, Static, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Caching.ScavengerTask: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32, Microsoft.Practices.EnterpriseLibrary.Caching.ICacheOperations, Microsoft.Practices.EnterpriseLibrary.Caching.Instrumentation.ICachingInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    DoScavenging(): PrivateScope, Public, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Caching.SerializationUtility: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToBytes(Object): PrivateScope, Public, Static, HideBySig
    ToObject(Byte[]): PrivateScope, Public, Static, HideBySig
