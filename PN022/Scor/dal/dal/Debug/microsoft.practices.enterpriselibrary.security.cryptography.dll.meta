  Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DesignResources.resources - Embedded, ContainedInManifestFile, 
  Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.Properties.Resources.resources - Embedded, ContainedInManifestFile, 
  Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Properties.Resources.resources - Embedded, ContainedInManifestFile, 
Assembly Microsoft.Practices.EnterpriseLibrary.Security.Cryptography, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly Microsoft.Practices.EnterpriseLibrary.Common, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35: 
	hash=SHA1, flags=None
Assembly System.Configuration.Install, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=SHA1, flags=None
Assembly System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=SHA1, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly System.Security, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=SHA1, flags=None
Assembly Microsoft.Practices.ServiceLocation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35: 
	hash=SHA1, flags=None
Assembly System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.SerializableConfigurationSection
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.ITypeRegistrationsProvider
  Fields:
    System.String SectionName = securityCryptographyConfiguration : Public, Static, Literal, HasDefault
  Properties:
    System.String DefaultHashProviderName 'get set' : 
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NameTypeConfigurationElementCollection`2[Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashProviderData,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData] HashProviders 'get ' : 
    System.String DefaultSymmetricCryptoProviderName 'get set' : 
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NameTypeConfigurationElementCollection`2[Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricProviderData,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData] SymmetricCryptoProviders 'get ' : 
  Methods:
    get_DefaultHashProviderName(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultHashProviderName(String): PrivateScope, Public, HideBySig, SpecialName
    get_HashProviders(): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultSymmetricCryptoProviderName(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultSymmetricCryptoProviderName(String): PrivateScope, Public, HideBySig, SpecialName
    get_SymmetricCryptoProviders(): PrivateScope, Public, HideBySig, SpecialName
    GetRegistrations(IConfigurationSource): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetUpdatedRegistrations(IConfigurationSource): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashProviderData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NameTypeConfigurationElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetRegistrations(IConfigurationSource): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashProviderData
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IHelperAssistedCustomConfigurationData`1[Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData]
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ICustomProviderData
  Properties:
    System.String TypeName 'get set' : 
    System.Collections.Specialized.NameValueCollection Attributes 'get ' : 
  Methods:
    get_TypeName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_TypeName(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetAttributeValue(String, String): PrivateScope, Public, HideBySig
    GetRegistrations(IConfigurationSource): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricProviderData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NameTypeConfigurationElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetRegistrations(IConfigurationSource): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricProviderData
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IHelperAssistedCustomConfigurationData`1[Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData]
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ICustomProviderData
  Properties:
    System.String TypeName 'get set' : 
    System.Collections.Specialized.NameValueCollection Attributes 'get ' : 
  Methods:
    get_TypeName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_TypeName(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetAttributeValue(String, String): PrivateScope, Public, HideBySig
    GetRegistrations(IConfigurationSource): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricProviderData
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.Cryptography.DataProtectionScope): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Cryptography.DataProtectionScope Scope 'get set' : 
  Methods:
    get_Scope(): PrivateScope, Public, HideBySig, SpecialName
    set_Scope(DataProtectionScope): PrivateScope, Public, HideBySig, SpecialName
    GetRegistrations(IConfigurationSource): PrivateScope, Public, Virtual, HideBySig
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptographyExtension: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings CryptographySettings 'get ' : 
  Methods:
    get_CryptographySettings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.ConfigureCryptographyExtension: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptographyExtension
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingCustomHashCryptoProviderNamedExtension: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    EncryptUsingCustomHashProviderNamed(IConfigureCryptography, String): PrivateScope, Public, Static, HideBySig
    EncryptUsingCustomHashProviderNamed(IConfigureCryptography, String, Type): PrivateScope, Public, Static, HideBySig
    EncryptUsingCustomHashProviderNamed(IConfigureCryptography, String, NameValueCollection): PrivateScope, Public, Static, HideBySig
    EncryptUsingCustomHashProviderNamed(IConfigureCryptography, String, Type, NameValueCollection): PrivateScope, Public, Static, HideBySig
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingCustomHashProviderNamed: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    SetAsDefault(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingCustomSymmetricProviderNamedExtension: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    EncryptUsingCustomSymmetricProviderNamed(IConfigureCryptography, String): PrivateScope, Public, Static, HideBySig
    EncryptUsingCustomSymmetricProviderNamed(IConfigureCryptography, String, Type): PrivateScope, Public, Static, HideBySig
    EncryptUsingCustomSymmetricProviderNamed(IConfigureCryptography, String, NameValueCollection): PrivateScope, Public, Static, HideBySig
    EncryptUsingCustomSymmetricProviderNamed(IConfigureCryptography, String, Type, NameValueCollection): PrivateScope, Public, Static, HideBySig
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingCustomSymmetricProviderNamed: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    SetAsDefault(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingDPAPIProviderNamedExtension: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    EncryptUsingDPAPIProviderNamed(IConfigureCryptography, String): PrivateScope, Public, Static, HideBySig
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingDPAPIProviderNamed: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    SetAsDefault(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetProtectionScope(DataProtectionScope): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingSymmetricProviderNamedExtension: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    EncryptUsingSymmetricAlgorithmProviderNamed(IConfigureCryptography, String): PrivateScope, Public, Static, HideBySig
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingSymmetricProviderNamed: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Properties:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingSymmetricProviderNamedOptions WithOptions 'get ' : 
  Methods:
    SetAsDefault(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_WithOptions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingSymmetricProviderNamedOptions: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingSymmetricProviderNamed
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    UsingSymmetricAlgorithm(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UsingSymmetricAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UseKeyFile(String, DataProtectionScope): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.CryptographyConfigurationSourceBuilderExtension: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ConfigureCryptography(IConfigurationSourceBuilder): PrivateScope, Public, Static, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingHashAlgorithmProviderNamedExtension: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    EncryptUsingHashAlgorithmProviderNamed(IConfigureCryptography, String): PrivateScope, Public, Static, HideBySig
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingHashAlgorithmProviderNamed: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Properties:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingHashAlgorithmProviderNamedOptions WithOptions 'get ' : 
  Methods:
    SetAsDefault(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_WithOptions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingHashAlgorithmProviderNamedOptions: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingHashAlgorithmProviderNamed
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    UsingHashAlgorithm(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UsingHashAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DisableSalt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.EncryptUsingKeyedHashAlgorithmProviderNamedExtension: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    EncryptUsingKeyedHashAlgorithmProviderNamed(IConfigureCryptography, String): PrivateScope, Public, Static, HideBySig
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingKeyedHashAlgorithmProviderNamed: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Properties:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingKeyedHashAlgorithmProviderNamedOptions WithOptions 'get ' : 
  Methods:
    SetAsDefault(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_WithOptions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingKeyedHashAlgorithmProviderNamedOptions: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IEncryptUsingKeyedHashAlgorithmProviderNamed
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fluent.IConfigureCryptography
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    UsingKeyedHashAlgorithm(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UsingKeyedHashAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DisableSalt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UseKeyFile(String, DataProtectionScope): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashProviderData
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type AlgorithmType 'get set' : 
    System.String AlgorithmTypeName 'get set' : 
    Boolean SaltEnabled 'get set' : 
  Methods:
    get_AlgorithmType(): PrivateScope, Public, HideBySig, SpecialName
    set_AlgorithmType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_AlgorithmTypeName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AlgorithmTypeName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SaltEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_SaltEnabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetRegistrations(IConfigurationSource): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type, Boolean, System.String, System.Security.Cryptography.DataProtectionScope): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ProtectedKeyFilename 'get set' : 
    System.Security.Cryptography.DataProtectionScope ProtectedKeyProtectionScope 'get set' : 
    System.String AlgorithmTypeName 'get set' : 
  Methods:
    get_ProtectedKeyFilename(): PrivateScope, Public, HideBySig, SpecialName
    set_ProtectedKeyFilename(String): PrivateScope, Public, HideBySig, SpecialName
    get_ProtectedKeyProtectionScope(): PrivateScope, Public, HideBySig, SpecialName
    set_ProtectedKeyProtectionScope(DataProtectionScope): PrivateScope, Public, HideBySig, SpecialName
    get_AlgorithmTypeName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_AlgorithmTypeName(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetRegistrations(IConfigurationSource): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CryptographySettingsManageabilityProvider: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProviderBase`1[Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings]
    Void .ctor(System.Collections.Generic.IDictionary`2[System.Type,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProvider]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String DefaultHashProviderPropertyName = defaultHashInstance : Public, Static, Literal, HasDefault
    System.String DefaultSymmetricCryptoProviderPropertyName = defaultSymmetricCryptoInstance : Public, Static, Literal, HasDefault
    System.String HashProvidersKeyName = hashProviders : Public, Static, Literal, HasDefault
    System.String SymmetricCryptoProvidersKeyName = symmetricCryptoProviders : Public, Static, Literal, HasDefault
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CustomHashProviderDataManageabilityProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.CustomProviderDataManageabilityProvider`1[Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomHashProviderData]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.CustomSymmetricCryptoProviderDataManageabilityProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.CustomProviderDataManageabilityProvider`1[Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CustomSymmetricCryptoProviderData]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.DpapiSymmetricCryptoProviderDataManageabilityProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1[Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.DpapiSymmetricCryptoProviderData]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ScopePropertyName = scope : Public, Static, Literal, HasDefault
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.HashAlgorithmProviderDataManageabilityProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1[Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.HashAlgorithmProviderData]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String SaltEnabledPropertyName = saltEnabled : Public, Static, Literal, HasDefault
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.KeyedHashAlgorithmProviderDataManageabilityProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1[Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.KeyedHashAlgorithmProviderData]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ProtectedKeyFilenamePropertyName = protectedKeyFilename : Public, Static, Literal, HasDefault
    System.String ProtectedKeyProtectionScopePropertyName = protectedKeyProtectionScope : Public, Static, Literal, HasDefault
    System.String SaltEnabledPropertyName = saltEnabled : Public, Static, Literal, HasDefault
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Manageability.SymmetricAlgorithmProviderDataManageabilityProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProviderBase`1[Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ProtectedKeyFilenamePropertyName = protectedKeyFilename : Public, Static, Literal, HasDefault
    System.String ProtectedKeyProtectionScopePropertyName = protectedKeyProtectionScope : Public, Static, Literal, HasDefault
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricAlgorithmProviderData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.SymmetricProviderData
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type, System.String, System.Security.Cryptography.DataProtectionScope): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type AlgorithmType 'get set' : 
    System.String AlgorithmTypeName 'get set' : 
    System.String ProtectedKeyFilename 'get set' : 
    System.Security.Cryptography.DataProtectionScope ProtectedKeyProtectionScope 'get set' : 
  Methods:
    get_AlgorithmType(): PrivateScope, Public, HideBySig, SpecialName
    set_AlgorithmType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_AlgorithmTypeName(): PrivateScope, Public, HideBySig, SpecialName
    set_AlgorithmTypeName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ProtectedKeyFilename(): PrivateScope, Public, HideBySig, SpecialName
    set_ProtectedKeyFilename(String): PrivateScope, Public, HideBySig, SpecialName
    get_ProtectedKeyProtectionScope(): PrivateScope, Public, HideBySig, SpecialName
    set_ProtectedKeyProtectionScope(DataProtectionScope): PrivateScope, Public, HideBySig, SpecialName
    GetRegistrations(IConfigurationSource): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.Unity.CryptographyBlockExtension: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Unity.EnterpriseLibraryBlockExtension
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManager: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    CompareHash(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CompareHash(String, Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateHash(String, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateHash(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DecryptSymmetric(String, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DecryptSymmetric(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EncryptSymmetric(String, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EncryptSymmetric(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManagerImpl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManager
    Void .ctor(System.Collections.Generic.IDictionary`2[System.String,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider], System.Collections.Generic.IDictionary`2[System.String,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IDictionary`2[System.String,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider], System.Collections.Generic.IDictionary`2[System.String,Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider], Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IDefaultCryptographyInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.String], System.Collections.Generic.IEnumerable`1[Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider], System.Collections.Generic.IEnumerable`1[System.String], System.Collections.Generic.IEnumerable`1[Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider], Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IDefaultCryptographyInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateHash(String, Byte[]): PrivateScope, Public, Virtual, HideBySig
    CreateHash(String, String): PrivateScope, Public, Virtual, HideBySig
    CompareHash(String, Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    CompareHash(String, String, String): PrivateScope, Public, Virtual, HideBySig
    EncryptSymmetric(String, Byte[]): PrivateScope, Public, Virtual, HideBySig
    EncryptSymmetric(String, String): PrivateScope, Public, Virtual, HideBySig
    DecryptSymmetric(String, Byte[]): PrivateScope, Public, Virtual, HideBySig
    DecryptSymmetric(String, String): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyUtility: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    CompareBytes(Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
    GetBytesFromHexString(String): PrivateScope, Public, Static, HideBySig
    GetHexStringFromBytes(Byte[]): PrivateScope, Public, Static, HideBySig
    CombineBytes(Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
    GetRandomBytes(Int32): PrivateScope, Public, Static, HideBySig
    GetRandomBytes(Byte[]): PrivateScope, Public, Static, HideBySig
    ZeroOutBytes(Byte[]): PrivateScope, Public, Static, HideBySig
    Transform(ICryptoTransform, Byte[]): PrivateScope, Public, Static, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiCryptographer: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.DataProtectionScope): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Cryptography.DataProtectionScope StoreScope 'get ' : 
  Methods:
    get_StoreScope(): PrivateScope, Public, HideBySig, SpecialName
    Encrypt(Byte[]): PrivateScope, Public, HideBySig
    Encrypt(Byte[], Byte[]): PrivateScope, Public, HideBySig
    Decrypt(Byte[]): PrivateScope, Public, HideBySig
    Decrypt(Byte[], Byte[]): PrivateScope, Public, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashCryptographer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ComputeHash(Byte[]): PrivateScope, Public, HideBySig
Interface Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IDefaultCryptographyInstrumentationProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    FireCryptographyErrorOccurred(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LogConfigurationError(String, String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LogConfigurationError(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.DefaultCryptographyEventLogger: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.InstrumentationListener
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IDefaultCryptographyInstrumentationProvider
  Fields:
    System.String EventLogSourceName = Enterprise Library Cryptography : Public, Static, Literal, HasDefault
  Methods:
    LogConfigurationError(String, String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LogConfigurationError(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireCryptographyErrorOccurred(String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    FireCyptographicOperationFailed(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FireHashComparisonPerformed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FireHashMismatchDetected(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FireHashOperationPerformed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    FireCyptographicOperationFailed(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FireSymmetricDecryptionPerformed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FireSymmetricEncryptionPerformed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.NullDefaultCryptographyInstrumentationProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IDefaultCryptographyInstrumentationProvider
  Methods:
    FireCryptographyErrorOccurred(String, String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LogConfigurationError(String, String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LogConfigurationError(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.NullHashAlgorithmInstrumentationProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider
  Methods:
    FireCyptographicOperationFailed(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireHashComparisonPerformed(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireHashMismatchDetected(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireHashOperationPerformed(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.NullSymmetricAlgorithmInstrumentationProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider
  Methods:
    FireCyptographicOperationFailed(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireSymmetricDecryptionPerformed(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireSymmetricEncryptionPerformed(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.SymmetricAlgorithmInstrumentationProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.InstrumentationListener
    Void .ctor(System.String, Boolean, Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean, Boolean, Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.IPerformanceCounterNameFormatter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider
  Fields:
    System.String TotalSymmetricEncryptionPerformedCounterName = Total Symmetric Encryptions : Public, Static, Literal, HasDefault
    System.String TotalSymmetricDecryptionPerformedCounterName = Total Symmetric Decryptions : Public, Static, Literal, HasDefault
    System.String counterCategoryName = Enterprise Library Cryptography Counters : Public, Static, Literal, HasDefault
  Methods:
    FireCyptographicOperationFailed(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireSymmetricEncryptionPerformed(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireSymmetricDecryptionPerformed(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Cryptographer: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    CreateHash(String, Byte[]): PrivateScope, Public, Static, HideBySig
    CreateHash(String, String): PrivateScope, Public, Static, HideBySig
    CompareHash(String, Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
    CompareHash(String, String, String): PrivateScope, Public, Static, HideBySig
    EncryptSymmetric(String, Byte[]): PrivateScope, Public, Static, HideBySig
    EncryptSymmetric(String, String): PrivateScope, Public, Static, HideBySig
    DecryptSymmetric(String, Byte[]): PrivateScope, Public, Static, HideBySig
    DecryptSymmetric(String, String): PrivateScope, Public, Static, HideBySig
Interface Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Encrypt(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Decrypt(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.DpapiSymmetricCryptoProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Security.Cryptography.DataProtectionScope, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.DataProtectionScope): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.DataProtectionScope, Byte[], Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.DataProtectionScope, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider
  Methods:
    Encrypt(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Decrypt(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    CreateHash(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CompareHash(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Type, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, Boolean, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider
  Fields:
    Int32 SaltLength = 16 : Public, Static, Literal, HasDefault
  Methods:
    CreateHash(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareHash(Byte[], Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashProviderFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.ContainerBasedInstanceFactory`1[Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IHashProvider]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyReader: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Read(Stream, DataProtectionScope): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Restore(Stream, String, DataProtectionScope): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Restore(Stream, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyWriter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Write(Stream, ProtectedKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Archive(Stream, ProtectedKey, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashKeyGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyGenerator
  Methods:
    GenerateKey(String, DataProtectionScope): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateKey(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateKey(Type, DataProtectionScope): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateKey(Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProjectInstaller: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Configuration.Install.Installer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyedHashAlgorithmProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider
    Void .ctor(System.Type, Boolean, System.String, System.Security.Cryptography.DataProtectionScope): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, Boolean, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, Boolean, System.String, System.Security.Cryptography.DataProtectionScope, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, Boolean, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.HashAlgorithmInstrumentationProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.InstrumentationListener
    Void .ctor(System.String, Boolean, Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean, Boolean, Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.IPerformanceCounterNameFormatter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.IHashAlgorithmInstrumentationProvider
  Fields:
    System.String TotalHashOperationPerformedPerformanceCounterName = Total Hash Operations : Public, Static, Literal, HasDefault
    System.String TotalHashComparisonPerformedPerformanceCounterName = Total Hash Comparisons : Public, Static, Literal, HasDefault
    System.String TotalHashMismatchesPerformedPerformanceCounterName = Total Hash Mismatches : Public, Static, Literal, HasDefault
    System.String counterCategoryName = Enterprise Library Cryptography Counters : Public, Static, Literal, HasDefault
  Methods:
    FireCyptographicOperationFailed(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireHashOperationPerformed(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireHashComparisonPerformed(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireHashMismatchDetected(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyReaderWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyReader
    Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyWriter
  Methods:
    Read(Stream, DataProtectionScope): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Restore(Stream, String, DataProtectionScope): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Restore(Stream, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Write(Stream, ProtectedKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Archive(Stream, ProtectedKey, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    Byte[] EncryptedKey 'get ' : 
    Byte[] DecryptedKey 'get ' : 
  Methods:
    CreateFromPlaintextKey(Byte[], DataProtectionScope): PrivateScope, Public, Static, HideBySig
    CreateFromEncryptedKey(Byte[], DataProtectionScope): PrivateScope, Public, Static, HideBySig
    get_EncryptedKey(): PrivateScope, Public, HideBySig, SpecialName
    get_DecryptedKey(): PrivateScope, Public, HideBySig, SpecialName
    Unprotect(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKeyCache: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey Item [System.String] 'get set' : 
  Methods:
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    set_Item(String, ProtectedKey): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Type, System.String, System.Security.Cryptography.DataProtectionScope): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.IO.Stream, System.Security.Cryptography.DataProtectionScope): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.String, System.Security.Cryptography.DataProtectionScope, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.IO.Stream, System.Security.Cryptography.DataProtectionScope, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Instrumentation.ISymmetricAlgorithmInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider
  Methods:
    Decrypt(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Encrypt(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptographer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Type, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ProtectedKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Encrypt(Byte[]): PrivateScope, Public, HideBySig
    Decrypt(Byte[]): PrivateScope, Public, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricCryptoProviderFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.ContainerBasedInstanceFactory`1[Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.ISymmetricCryptoProvider]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricKeyGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.IKeyGenerator
  Methods:
    GenerateKey(String, DataProtectionScope): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateKey(Type, DataProtectionScope): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateKey(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateKey(Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.KeyManager: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ArchiveKey(Stream, ProtectedKey, String): PrivateScope, Public, Static, HideBySig
    ClearCache(): PrivateScope, Public, Static, HideBySig
    GenerateKeyedHashKey(String, DataProtectionScope): PrivateScope, Public, Static, HideBySig
    GenerateKeyedHashKey(String): PrivateScope, Public, Static, HideBySig
    GenerateKeyedHashKey(Type, DataProtectionScope): PrivateScope, Public, Static, HideBySig
    GenerateKeyedHashKey(Type): PrivateScope, Public, Static, HideBySig
    GenerateSymmetricKey(String, DataProtectionScope): PrivateScope, Public, Static, HideBySig
    GenerateSymmetricKey(String): PrivateScope, Public, Static, HideBySig
    GenerateSymmetricKey(Type, DataProtectionScope): PrivateScope, Public, Static, HideBySig
    GenerateSymmetricKey(Type): PrivateScope, Public, Static, HideBySig
    Read(Stream, DataProtectionScope): PrivateScope, Public, Static, HideBySig
    Read(String, DataProtectionScope): PrivateScope, Public, Static, HideBySig
    RestoreKey(Stream, String, DataProtectionScope): PrivateScope, Public, Static, HideBySig
    Write(Stream, Byte[], DataProtectionScope): PrivateScope, Public, Static, HideBySig
    Write(Stream, ProtectedKey): PrivateScope, Public, Static, HideBySig
