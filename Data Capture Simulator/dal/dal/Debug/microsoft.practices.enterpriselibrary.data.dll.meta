  Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DesignResources.resources - Embedded, ContainedInManifestFile, 
  Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Manageability.Properties.Resources.resources - Embedded, ContainedInManifestFile, 
  Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.DesignResources.resources - Embedded, ContainedInManifestFile, 
  Microsoft.Practices.EnterpriseLibrary.Data.Properties.Resources.resources - Embedded, ContainedInManifestFile, 
Assembly Microsoft.Practices.EnterpriseLibrary.Data, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly Microsoft.Practices.EnterpriseLibrary.Common, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35: 
	hash=SHA1, flags=None
Assembly System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=SHA1, flags=None
Assembly System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly System.Configuration.Install, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=SHA1, flags=None
Assembly System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly System.Data.OracleClient, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly Microsoft.Practices.ServiceLocation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35: 
	hash=SHA1, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly System.Transactions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly Microsoft.Practices.Unity, Version=2.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35: 
	hash=SHA1, flags=None
Class Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor`1[TResult]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: TResult
  Methods:
    Execute(Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginExecute(AsyncCallback, Object, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndExecute(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Data.CommandAccessor`1[TResult]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: TResult
  :Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor`1[TResult]
  Methods:
    EndExecute(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
Interface Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper`1[TResult]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: TResult
  Methods:
    MapSet(IDataReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DataAccessDesignTime: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String ConnectionStringSettingsSectionName = connectionStrings : Public, Static, Literal, HasDefault
Class Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DataAccessDesignTime+MetadataTypes: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, Sealed, BeforeFieldInit
Class Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DataAccessDesignTime+MetadataTypes+DbProviderMappingMetadata: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, BeforeFieldInit
  Properties:
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DataAccessDesignTime+MetadataTypes+ConnectionStringsSectionMetadata: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, BeforeFieldInit
Class Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DataAccessDesignTime+MetadataTypes+ConnectionStringSettingsCollectionMetadata: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, BeforeFieldInit
Class Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DataAccessDesignTime+MetadataTypes+ConnectionStringSettingsMetadata: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, BeforeFieldInit
  Properties:
    System.String Name 'get set' : 
    System.String ConnectionString 'get set' : 
    System.String ProviderName 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionString(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectionString(String): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderName(): PrivateScope, Public, HideBySig, SpecialName
    set_ProviderName(String): PrivateScope, Public, HideBySig, SpecialName
Interface Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseDefaultConnectionString: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    WithConnectionString(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProviderEntry: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Properties:
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProviders ThatIs 'get ' : 
  Methods:
    get_ThatIs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfiguration: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    ForDatabaseNamed(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProperties: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProviderEntry
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfiguration
  Methods:
    AsDefault(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseAnotherDatabaseConfiguration: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseDefaultConnectionString
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProperties
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProviderEntry
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfiguration
  Methods:
    WithConnectionString(DbConnectionStringBuilder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.DatabaseConfigurationExtension: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProperties
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProviderEntry
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfiguration
  Properties:
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProviders ThatIs 'get ' : 
    System.Configuration.ConnectionStringSettings ConnectionString 'get ' : 
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSourceBuilder Builder 'get ' : 
  Methods:
    get_ThatIs(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ForDatabaseNamed(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AsDefault(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_ConnectionString(): PrivateScope, Public, HideBySig, SpecialName
    get_Builder(): PrivateScope, Public, HideBySig, SpecialName
    WithConnectionString(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    WithConnectionString(DbConnectionStringBuilder): PrivateScope, Public, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseData: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.String Name 'get ' : 
    System.String ConnectionString 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionString(): PrivateScope, Public, HideBySig, SpecialName
    GetRegistrations(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.SerializableConfigurationSection
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String SectionName = dataConfiguration : Public, Static, Literal, HasDefault
  Properties:
    System.String DefaultDatabase 'get set' : 
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NamedElementCollection`1[Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DbProviderMapping] ProviderMappings 'get ' : 
  Methods:
    GetDatabaseSettings(IConfigurationSource): PrivateScope, Public, Static, HideBySig
    get_DefaultDatabase(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultDatabase(String): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderMappings(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSyntheticConfigSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.ITypeRegistrationsProvider
  Properties:
    System.String DefaultDatabase 'get ' : 
    System.Collections.Generic.IEnumerable`1[Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseData] Databases 'get ' : 
  Methods:
    get_DefaultDatabase(): PrivateScope, Public, HideBySig, SpecialName
    get_Databases(): PrivateScope, Public, HideBySig, SpecialName
    GetConnectionStringSettings(String): PrivateScope, Public, HideBySig
    GetProviderMapping(String): PrivateScope, Public, HideBySig
    GetRegistrations(IConfigurationSource): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetUpdatedRegistrations(IConfigurationSource): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.DatabaseProviderExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ASqlDatabase(IDatabaseConfigurationProviders): PrivateScope, Public, Static, HideBySig
    ASqlCeDatabase(IDatabaseConfigurationProviders): PrivateScope, Public, Static, HideBySig
    AnOleDbDatabase(IDatabaseConfigurationProviders): PrivateScope, Public, Static, HideBySig
    AnOdbcDatabase(IDatabaseConfigurationProviders): PrivateScope, Public, Static, HideBySig
    AnOracleDatabase(IDatabaseConfigurationProviders): PrivateScope, Public, Static, HideBySig
    AnotherDatabaseType(IDatabaseConfigurationProviders, String): PrivateScope, Public, Static, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Common.Configuration.DataConfigurationSourceBuilderExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ConfigureData(IConfigurationSourceBuilder): PrivateScope, Public, Static, HideBySig
Interface Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProviders: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
Interface Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseProviderExtensionContext: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.Configuration.ConnectionStringSettings ConnectionString 'get ' : 
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSourceBuilder Builder 'get ' : 
  Methods:
    get_ConnectionString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Builder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDataConfiguration: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfiguration
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    WithProviderNamed(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseProviderConfiguration: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDataConfiguration
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfiguration
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    MappedToDatabase(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MappedToDatabase(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DbProviderMapping: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NamedConfigurationElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String DefaultSqlProviderName = System.Data.SqlClient : Public, Static, Literal, HasDefault
    System.String DefaultOracleProviderName = System.Data.OracleClient : Public, Static, Literal, HasDefault
  Properties:
    System.Type DatabaseType 'get set' : 
    System.String DatabaseTypeName 'get set' : 
    System.String DbProviderName 'get ' : 
    System.String Name 'get set' : 
  Methods:
    get_DatabaseType(): PrivateScope, Public, HideBySig, SpecialName
    set_DatabaseType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_DatabaseTypeName(): PrivateScope, Public, HideBySig, SpecialName
    set_DatabaseTypeName(String): PrivateScope, Public, HideBySig, SpecialName
    get_DbProviderName(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
Interface Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IOdbcDatabaseConfiguration: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseDefaultConnectionString
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProperties
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProviderEntry
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfiguration
  Methods:
    WithConnectionString(OdbcConnectionStringBuilder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IOleDbDatabaseConfiguration: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseDefaultConnectionString
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProperties
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProviderEntry
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfiguration
  Methods:
    WithConnectionString(OleDbConnectionStringBuilder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseOracleConfiguration: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProperties
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProviderEntry
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfiguration
  Methods:
    WithConnectionString(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WithConnectionString(OracleConnectionStringBuilder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WithPackageNamed(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseOraclePackageConfiguration: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    AndPrefix(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseSqlCeDatabaseConfiguration: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseDefaultConnectionString
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProperties
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProviderEntry
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfiguration
Interface Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseSqlDatabaseConfiguration: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseDefaultConnectionString
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProperties
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProviderEntry
    Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfiguration
  Methods:
    WithConnectionString(SqlConnectionStringBuilder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Data.Configuration.GenericDatabaseData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseData
    Void .ctor(System.Configuration.ConnectionStringSettings, Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ProviderName 'get ' : 
  Methods:
    get_ProviderName(): PrivateScope, Public, HideBySig, SpecialName
    GetRegistrations(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Manageability.ConnectionStringsManageabilityProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProviderBase`1[System.Configuration.ConnectionStringsSection]
    Void .ctor(System.Collections.Generic.IDictionary`2[System.Type,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProvider]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ConnectionStringPropertyName = connectionString : Public, Static, Literal, HasDefault
    System.String ProviderNamePropertyName = providerName : Public, Static, Literal, HasDefault
Class Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Manageability.DatabaseSettingsManageabilityProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProviderBase`1[Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings]
    Void .ctor(System.Collections.Generic.IDictionary`2[System.Type,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProvider]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String DefaultDatabasePropertyName = defaultDatabase : Public, Static, Literal, HasDefault
    System.String ProviderMappingsKeyName = providerMappings : Public, Static, Literal, HasDefault
    System.String DatabaseTypePropertyName = databaseType : Public, Static, Literal, HasDefault
Class Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Manageability.OracleConnectionSettingsManageabilityProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationSectionManageabilityProviderBase`1[Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OracleConnectionSettings]
    Void .ctor(System.Collections.Generic.IDictionary`2[System.Type,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Manageability.ConfigurationElementManageabilityProvider]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String PackagesPropertyName = packages : Public, Static, Literal, HasDefault
Class Microsoft.Practices.EnterpriseLibrary.Data.DatabaseConnectionWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Data.Common.DbConnection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Data.Common.DbConnection Connection 'get set' : 
    Boolean IsDisposed 'get ' : 
  Methods:
    get_Connection(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddRef(): PrivateScope, Public, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.DatabaseExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ExecuteSprocAccessor(Database, String, Object[]): PrivateScope, Public, Static, HideBySig
    ExecuteSprocAccessor(Database, String, IParameterMapper, Object[]): PrivateScope, Public, Static, HideBySig
    ExecuteSprocAccessor(Database, String, IRowMapper`1, Object[]): PrivateScope, Public, Static, HideBySig
    ExecuteSprocAccessor(Database, String, IParameterMapper, IRowMapper`1, Object[]): PrivateScope, Public, Static, HideBySig
    ExecuteSprocAccessor(Database, String, IResultSetMapper`1, Object[]): PrivateScope, Public, Static, HideBySig
    ExecuteSprocAccessor(Database, String, IParameterMapper, IResultSetMapper`1, Object[]): PrivateScope, Public, Static, HideBySig
    CreateSprocAccessor(Database, String): PrivateScope, Public, Static, HideBySig
    CreateSprocAccessor(Database, String, IParameterMapper): PrivateScope, Public, Static, HideBySig
    CreateSprocAccessor(Database, String, IRowMapper`1): PrivateScope, Public, Static, HideBySig
    CreateSprocAccessor(Database, String, IParameterMapper, IRowMapper`1): PrivateScope, Public, Static, HideBySig
    CreateSprocAccessor(Database, String, IResultSetMapper`1): PrivateScope, Public, Static, HideBySig
    CreateSprocAccessor(Database, String, IParameterMapper, IResultSetMapper`1): PrivateScope, Public, Static, HideBySig
    ExecuteSqlStringAccessor(Database, String): PrivateScope, Public, Static, HideBySig
    ExecuteSqlStringAccessor(Database, String, IResultSetMapper`1): PrivateScope, Public, Static, HideBySig
    ExecuteSqlStringAccessor(Database, String, IRowMapper`1): PrivateScope, Public, Static, HideBySig
    CreateSqlStringAccessor(Database, String): PrivateScope, Public, Static, HideBySig
    CreateSqlStringAccessor(Database, String, IParameterMapper): PrivateScope, Public, Static, HideBySig
    CreateSqlStringAccessor(Database, String, IRowMapper`1): PrivateScope, Public, Static, HideBySig
    CreateSqlStringAccessor(Database, String, IResultSetMapper`1): PrivateScope, Public, Static, HideBySig
    CreateSqlStringAccessor(Database, String, IParameterMapper, IRowMapper`1): PrivateScope, Public, Static, HideBySig
    CreateSqlStringAccessor(Database, String, IParameterMapper, IResultSetMapper`1): PrivateScope, Public, Static, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.DataReaderWrapper: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.MarshalByRefObject
  Interfaces:
    System.Data.IDataReader
    System.IDisposable
    System.Data.IDataRecord
  Properties:
    System.Data.IDataReader InnerReader 'get ' : 
    Int32 FieldCount 'get ' : 
    Int32 Depth 'get ' : 
    Boolean IsClosed 'get ' : 
    Int32 RecordsAffected 'get ' : 
  Methods:
    get_InnerReader(): PrivateScope, Public, HideBySig, SpecialName
    get_FieldCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Depth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsClosed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RecordsAffected(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetName(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDataTypeName(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldType(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetValue(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetValues(Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetOrdinal(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBoolean(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetByte(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBytes(Int32, Int64, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetChar(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetChars(Int32, Int64, Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGuid(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetInt16(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetInt32(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetInt64(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFloat(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDouble(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetString(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDecimal(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDateTime(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetData(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsDBNull(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSchemaTable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextResult(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Microsoft.Practices.EnterpriseLibrary.Data.Instrumentation.IDataInstrumentationProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    FireCommandExecutedEvent(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FireCommandFailedEvent(String, String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FireConnectionOpenedEvent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FireConnectionFailedEvent(String, Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Data.Instrumentation.NewDataInstrumentationProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.InstrumentationListener
    Void .ctor(System.String, Boolean, Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean, Boolean, Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.IPerformanceCounterNameFormatter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Data.Instrumentation.IDataInstrumentationProvider
  Fields:
    System.String CounterCategoryName = Enterprise Library Data Counters : Public, Static, Literal, HasDefault
    System.String TotalConnectionOpenedCounter = Total Connections Opened : Public, Static, Literal, HasDefault
    System.String TotalConnectionFailedCounter = Total Connections Failed : Public, Static, Literal, HasDefault
    System.String TotalCommandsExecutedCounter = Total Commands Executed : Public, Static, Literal, HasDefault
    System.String TotalCommandsFailedCounter = Total Commands Failed : Public, Static, Literal, HasDefault
  Methods:
    FireConnectionOpenedEvent(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireCommandExecutedEvent(DateTime): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireConnectionFailedEvent(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireCommandFailedEvent(String, String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ClearCounterCache(): PrivateScope, Public, Static, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.Instrumentation.NullDataInstrumentationProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Data.Instrumentation.IDataInstrumentationProvider
  Methods:
    FireCommandExecutedEvent(DateTime): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireCommandFailedEvent(String, String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireConnectionOpenedEvent(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FireConnectionFailedEvent(String, Exception): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    AssignParameters(DbCommand, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper`1[TResult]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: TResult
  Methods:
    MapRow(IDataRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Data.MapBuilder`1[TResult]: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Type parameter: TResult,  DefaultConstructor
  Methods:
    BuildAllProperties(): PrivateScope, Public, Static, HideBySig
    MapAllProperties(): PrivateScope, Public, Static, HideBySig
    MapNoProperties(): PrivateScope, Public, Static, HideBySig
Interface Microsoft.Practices.EnterpriseLibrary.Data.IMapBuilderContext`1[TResult]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: TResult
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    MapByName(PropertyInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    MapByName(Expression`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoNotMap(PropertyInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoNotMap(Expression`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Map(Expression`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Map(PropertyInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Build(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Data.IMapBuilderContextTest`1[TResult]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: TResult
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Data.IMapBuilderContext`1[TResult]
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    GetPropertyMappings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Practices.EnterpriseLibrary.Data.IMapBuilderContextMap`2[TResult,TMember]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: TResult
  Type parameter: TMember
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface
  Methods:
    ToColumn(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WithFunc(Func`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Practices.EnterpriseLibrary.Data.RefCountingDataReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Data.DataReaderWrapper
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Data.DatabaseConnectionWrapper, System.Data.IDataReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Close(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.ReflectionRowMapper`1[TResult]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TResult,  DefaultConstructor
    Void .ctor(System.Collections.Generic.IDictionary`2[System.Reflection.PropertyInfo,Microsoft.Practices.EnterpriseLibrary.Data.PropertyMapping]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper`1[TResult]
  Methods:
    MapRow(IDataRecord): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Data.PropertyMapping: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.Reflection.PropertyInfo Property 'get set' : 
  Methods:
    get_Property(): PrivateScope, Public, HideBySig, SpecialName
    GetPropertyValue(IDataRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Map(Object, IDataRecord): PrivateScope, Public, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.ColumnNameMapping: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Data.PropertyMapping
    Void .ctor(System.Reflection.PropertyInfo, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ColumnName 'get set' : 
  Methods:
    get_ColumnName(): PrivateScope, Public, HideBySig, SpecialName
    GetPropertyValue(IDataRecord): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.FuncMapping: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Data.PropertyMapping
    Void .ctor(System.Reflection.PropertyInfo, System.Func`2[System.Data.IDataRecord,System.Object]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Func`2[System.Data.IDataRecord,System.Object] Func 'get set' : 
  Methods:
    get_Func(): PrivateScope, Public, HideBySig, SpecialName
    GetPropertyValue(IDataRecord): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1[TResult]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TResult
  :Microsoft.Practices.EnterpriseLibrary.Data.CommandAccessor`1[TResult]
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database, System.String, Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper`1[TResult]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database, System.String, Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper`1[TResult]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database, System.String, Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper, Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper`1[TResult]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database, System.String, Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper, Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper`1[TResult]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Execute(Object[]): PrivateScope, Public, Virtual, HideBySig
    BeginExecute(AsyncCallback, Object, Object[]): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.SqlDatabaseData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseData
    Void .ctor(System.Configuration.ConnectionStringSettings, Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetRegistrations(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OracleDatabaseData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseData
    Void .ctor(System.Configuration.ConnectionStringSettings, Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IEnumerable`1[Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OraclePackageData] PackageMappings 'get ' : 
  Methods:
    get_PackageMappings(): PrivateScope, Public, HideBySig, SpecialName
    GetRegistrations(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Unity.DataAccessBlockExtension: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit (Obsolete)
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Unity.EnterpriseLibraryBlockExtension
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Practices.EnterpriseLibrary.Data.DatabaseProviderFactory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ContainerModel.ContainerBasedInstanceFactory`1[Microsoft.Practices.EnterpriseLibrary.Data.Database]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Practices.EnterpriseLibrary.Data.Instrumentation.DefaultDataEventLogger: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.InstrumentationListener
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    LogConfigurationError(Exception, String): PrivateScope, Public, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OracleConnectionData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NamedConfigurationElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NamedElementCollection`1[Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OraclePackageData] Packages 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Packages(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OracleConnectionSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.SerializableConfigurationSection
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String SectionName = oracleConnectionSettings : Public, Static, Literal, HasDefault
  Properties:
    Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NamedElementCollection`1[Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OracleConnectionData] OracleConnectionsData 'get ' : 
  Methods:
    GetSettings(IConfigurationSource): PrivateScope, Public, Static, HideBySig
    get_OracleConnectionsData(): PrivateScope, Public, HideBySig, SpecialName
Interface Microsoft.Practices.EnterpriseLibrary.Data.Oracle.IOraclePackage: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String Name 'get ' : 
    System.String Prefix 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Prefix(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OraclePackageData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Common.Configuration.NamedConfigurationElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.Practices.EnterpriseLibrary.Data.Oracle.IOraclePackage
  Properties:
    System.String Prefix 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_Prefix(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Prefix(String): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Microsoft.Practices.EnterpriseLibrary.Data.ConnectionString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String UserName 'get set' : 
    System.String Password 'get set' : 
  Methods:
    get_UserName(): PrivateScope, Public, HideBySig, SpecialName
    set_UserName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Password(): PrivateScope, Public, HideBySig, SpecialName
    set_Password(String): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToStringNoCredentials(): PrivateScope, Public, HideBySig
    CreateNewConnectionString(String): PrivateScope, Public, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.Database: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.String ConnectionString 'get ' : 
    System.String ConnectionStringWithoutCredentials 'get ' : 
    System.Data.Common.DbProviderFactory DbProviderFactory 'get ' : 
    Boolean SupportsParemeterDiscovery 'get ' : 
    Boolean SupportsAsync 'get ' : 
  Methods:
    get_ConnectionString(): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionStringWithoutCredentials(): PrivateScope, Public, HideBySig, SpecialName
    get_DbProviderFactory(): PrivateScope, Public, HideBySig, SpecialName
    AddInParameter(DbCommand, String, DbType): PrivateScope, Public, HideBySig
    AddInParameter(DbCommand, String, DbType, Object): PrivateScope, Public, HideBySig
    AddInParameter(DbCommand, String, DbType, String, DataRowVersion): PrivateScope, Public, HideBySig
    AddOutParameter(DbCommand, String, DbType, Int32): PrivateScope, Public, HideBySig
    AddParameter(DbCommand, String, DbType, Int32, ParameterDirection, Boolean, Byte, Byte, String, DataRowVersion, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddParameter(DbCommand, String, DbType, ParameterDirection, String, DataRowVersion, Object): PrivateScope, Public, HideBySig
    BuildParameterName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearParameterCache(): PrivateScope, Public, Static, HideBySig
    CreateConnection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SupportsParemeterDiscovery(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    DiscoverParameters(DbCommand): PrivateScope, Public, HideBySig
    ExecuteDataSet(DbCommand): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteDataSet(DbCommand, DbTransaction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteDataSet(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteDataSet(DbTransaction, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteDataSet(CommandType, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteDataSet(DbTransaction, CommandType, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteNonQuery(DbCommand): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteNonQuery(DbCommand, DbTransaction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteNonQuery(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteNonQuery(DbTransaction, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteNonQuery(CommandType, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteNonQuery(DbTransaction, CommandType, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteReader(DbCommand): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteReader(DbCommand, DbTransaction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteReader(String, Object[]): PrivateScope, Public, HideBySig
    ExecuteReader(DbTransaction, String, Object[]): PrivateScope, Public, HideBySig
    ExecuteReader(CommandType, String): PrivateScope, Public, HideBySig
    ExecuteReader(DbTransaction, CommandType, String): PrivateScope, Public, HideBySig
    ExecuteScalar(DbCommand): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteScalar(DbCommand, DbTransaction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteScalar(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteScalar(DbTransaction, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteScalar(CommandType, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExecuteScalar(DbTransaction, CommandType, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDataAdapter(): PrivateScope, Public, HideBySig
    GetParameterValue(DbCommand, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSqlStringCommand(String): PrivateScope, Public, HideBySig
    GetStoredProcCommand(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStoredProcCommand(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AssignParameters(DbCommand, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStoredProcCommandWithSourceColumns(String, String[]): PrivateScope, Public, HideBySig
    LoadDataSet(DbCommand, DataSet, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LoadDataSet(DbCommand, DataSet, String, DbTransaction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LoadDataSet(DbCommand, DataSet, String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LoadDataSet(DbCommand, DataSet, String[], DbTransaction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LoadDataSet(String, DataSet, String[], Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LoadDataSet(DbTransaction, String, DataSet, String[], Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LoadDataSet(CommandType, String, DataSet, String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LoadDataSet(DbTransaction, CommandType, String, DataSet, String[]): PrivateScope, Public, HideBySig
    SetParameterValue(DbCommand, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateDataSet(DataSet, String, DbCommand, DbCommand, DbCommand, UpdateBehavior, Nullable`1): PrivateScope, Public, HideBySig
    UpdateDataSet(DataSet, String, DbCommand, DbCommand, DbCommand, UpdateBehavior): PrivateScope, Public, HideBySig
    UpdateDataSet(DataSet, String, DbCommand, DbCommand, DbCommand, DbTransaction, Nullable`1): PrivateScope, Public, HideBySig
    UpdateDataSet(DataSet, String, DbCommand, DbCommand, DbCommand, DbTransaction): PrivateScope, Public, HideBySig
    get_SupportsAsync(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    BeginExecuteNonQuery(DbCommand, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteNonQuery(DbCommand, DbTransaction, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteNonQuery(String, AsyncCallback, Object, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteNonQuery(DbTransaction, String, AsyncCallback, Object, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteNonQuery(CommandType, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteNonQuery(DbTransaction, CommandType, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndExecuteNonQuery(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteReader(DbCommand, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteReader(DbCommand, DbTransaction, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteReader(String, AsyncCallback, Object, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteReader(DbTransaction, String, AsyncCallback, Object, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteReader(CommandType, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteReader(DbTransaction, CommandType, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndExecuteReader(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteScalar(DbCommand, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteScalar(DbCommand, DbTransaction, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteScalar(String, AsyncCallback, Object, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteScalar(DbTransaction, String, AsyncCallback, Object, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteScalar(CommandType, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginExecuteScalar(DbTransaction, CommandType, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndExecuteScalar(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.Practices.EnterpriseLibrary.Data.DatabaseFactory: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    CreateDatabase(): PrivateScope, Public, Static, HideBySig
    CreateDatabase(String): PrivateScope, Public, Static, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.GenericDatabase: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Data.Database
    Void .ctor(System.String, System.Data.Common.DbProviderFactory): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Data.Common.DbProviderFactory, Microsoft.Practices.EnterpriseLibrary.Data.Instrumentation.IDataInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Practices.EnterpriseLibrary.Data.Instrumentation.DataInstrumentationInstaller: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Configuration.Install.Installer
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Practices.EnterpriseLibrary.Data.Oracle.OracleDatabase: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Data.Database
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Collections.Generic.IEnumerable`1[Microsoft.Practices.EnterpriseLibrary.Data.Oracle.IOraclePackage]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Collections.Generic.IEnumerable`1[Microsoft.Practices.EnterpriseLibrary.Data.Oracle.IOraclePackage], Microsoft.Practices.EnterpriseLibrary.Data.Instrumentation.IDataInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean SupportsParemeterDiscovery 'get ' : 
  Methods:
    AddParameter(DbCommand, String, DbType, Int32, ParameterDirection, Boolean, Byte, Byte, String, DataRowVersion, Object): PrivateScope, Public, Virtual, HideBySig
    AddParameter(OracleCommand, String, OracleType, Int32, ParameterDirection, Boolean, Byte, Byte, String, DataRowVersion, Object): PrivateScope, Public, HideBySig
    ExecuteReader(DbCommand): PrivateScope, Public, Virtual, HideBySig
    ExecuteReader(DbCommand, DbTransaction): PrivateScope, Public, Virtual, HideBySig
    ExecuteDataSet(DbCommand): PrivateScope, Public, Virtual, HideBySig
    ExecuteDataSet(DbCommand, DbTransaction): PrivateScope, Public, Virtual, HideBySig
    LoadDataSet(DbCommand, DataSet, String[]): PrivateScope, Public, Virtual, HideBySig
    LoadDataSet(DbCommand, DataSet, String[], DbTransaction): PrivateScope, Public, Virtual, HideBySig
    GetParameterValue(DbCommand, String): PrivateScope, Public, Virtual, HideBySig
    SetParameterValue(DbCommand, String, Object): PrivateScope, Public, Virtual, HideBySig
    get_SupportsParemeterDiscovery(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetStoredProcCommand(String, Object[]): PrivateScope, Public, Virtual, HideBySig
    AssignParameters(DbCommand, Object[]): PrivateScope, Public, Virtual, HideBySig
    GetStoredProcCommand(String): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.Oracle.OracleDataReaderWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Data.DataReaderWrapper
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    System.Data.OracleClient.OracleDataReader InnerReader 'get ' : 
  Methods:
    get_InnerReader(): PrivateScope, Public, HideBySig, SpecialName
    GetBoolean(Int32): PrivateScope, Public, Virtual, HideBySig
    GetByte(Int32): PrivateScope, Public, Virtual, HideBySig
    GetGuid(Int32): PrivateScope, Public, Virtual, HideBySig
    GetInt16(Int32): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.Oracle.RefCountingOracleDataReaderWrapper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Data.Oracle.OracleDataReaderWrapper
  Methods:
    Close(): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.ParameterCache: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetParameters(DbCommand, Database): PrivateScope, Public, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.DaabAsyncResult: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IAsyncResult, System.Data.Common.DbCommand, Boolean, Boolean, System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IAsyncResult
  Properties:
    System.Object AsyncState 'get ' : 
    System.Threading.WaitHandle AsyncWaitHandle 'get ' : 
    Boolean CompletedSynchronously 'get ' : 
    Boolean IsCompleted 'get ' : 
    System.IAsyncResult InnerAsyncResult 'get ' : 
    Boolean DisposeCommand 'get ' : 
    System.Data.Common.DbCommand Command 'get ' : 
    Boolean CloseConnection 'get ' : 
    System.Data.Common.DbConnection Connection 'get ' : 
    System.DateTime StartTime 'get ' : 
  Methods:
    get_AsyncState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AsyncWaitHandle(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompletedSynchronously(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsCompleted(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_InnerAsyncResult(): PrivateScope, Public, HideBySig, SpecialName
    get_DisposeCommand(): PrivateScope, Public, HideBySig, SpecialName
    get_Command(): PrivateScope, Public, HideBySig, SpecialName
    get_CloseConnection(): PrivateScope, Public, HideBySig, SpecialName
    get_Connection(): PrivateScope, Public, HideBySig, SpecialName
    get_StartTime(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Practices.EnterpriseLibrary.Data.Sql.SqlDatabase: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
  :Microsoft.Practices.EnterpriseLibrary.Data.Database
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Microsoft.Practices.EnterpriseLibrary.Data.Instrumentation.IDataInstrumentationProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean SupportsAsync 'get ' : 
    Boolean SupportsParemeterDiscovery 'get ' : 
  Methods:
    get_SupportsAsync(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ExecuteXmlReader(DbCommand): PrivateScope, Public, HideBySig
    ExecuteXmlReader(DbCommand, DbTransaction): PrivateScope, Public, HideBySig
    BeginExecuteXmlReader(DbCommand, AsyncCallback, Object): PrivateScope, Public, HideBySig
    BeginExecuteXmlReader(DbCommand, DbTransaction, AsyncCallback, Object): PrivateScope, Public, HideBySig
    EndExecuteXmlReader(IAsyncResult): PrivateScope, Public, HideBySig
    get_SupportsParemeterDiscovery(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    BuildParameterName(String): PrivateScope, Public, Virtual, HideBySig
    AddParameter(DbCommand, String, SqlDbType, Int32, ParameterDirection, Boolean, Byte, Byte, String, DataRowVersion, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddParameter(DbCommand, String, SqlDbType, ParameterDirection, String, DataRowVersion, Object): PrivateScope, Public, HideBySig
    AddOutParameter(DbCommand, String, SqlDbType, Int32): PrivateScope, Public, HideBySig
    AddInParameter(DbCommand, String, SqlDbType): PrivateScope, Public, HideBySig
    AddInParameter(DbCommand, String, SqlDbType, Object): PrivateScope, Public, HideBySig
    AddInParameter(DbCommand, String, SqlDbType, String, DataRowVersion): PrivateScope, Public, HideBySig
    BeginExecuteNonQuery(DbCommand, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteNonQuery(DbCommand, DbTransaction, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteNonQuery(String, AsyncCallback, Object, Object[]): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteNonQuery(DbTransaction, String, AsyncCallback, Object, Object[]): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteNonQuery(CommandType, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteNonQuery(DbTransaction, CommandType, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    EndExecuteNonQuery(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteReader(DbCommand, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteReader(DbCommand, DbTransaction, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteReader(String, AsyncCallback, Object, Object[]): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteReader(DbTransaction, String, AsyncCallback, Object, Object[]): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteReader(CommandType, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteReader(DbTransaction, CommandType, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    EndExecuteReader(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteScalar(DbCommand, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteScalar(DbCommand, DbTransaction, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteScalar(String, AsyncCallback, Object, Object[]): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteScalar(DbTransaction, String, AsyncCallback, Object, Object[]): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteScalar(CommandType, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    BeginExecuteScalar(DbTransaction, CommandType, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    EndExecuteScalar(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.SqlStringAccessor`1[TResult]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TResult
  :Microsoft.Practices.EnterpriseLibrary.Data.CommandAccessor`1[TResult]
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database, System.String, Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper`1[TResult]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database, System.String, Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper`1[TResult]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database, System.String, Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper, Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper`1[TResult]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database, System.String, Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper, Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper`1[TResult]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Execute(Object[]): PrivateScope, Public, Virtual, HideBySig
    BeginExecute(AsyncCallback, Object, Object[]): PrivateScope, Public, Virtual, HideBySig
Class Microsoft.Practices.EnterpriseLibrary.Data.TransactionScopeConnections: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetConnection(Database): PrivateScope, Public, Static, HideBySig
Struct Microsoft.Practices.EnterpriseLibrary.Data.UpdateBehavior: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Practices.EnterpriseLibrary.Data.UpdateBehavior Standard = 0 : Public, Static, Literal, HasDefault
    Microsoft.Practices.EnterpriseLibrary.Data.UpdateBehavior Continue = 1 : Public, Static, Literal, HasDefault
    Microsoft.Practices.EnterpriseLibrary.Data.UpdateBehavior Transactional = 2 : Public, Static, Literal, HasDefault
